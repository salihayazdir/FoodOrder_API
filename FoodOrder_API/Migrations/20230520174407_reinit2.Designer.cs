// <auto-generated />
using System;
using FoodOrder_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodOrder_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230520174407_reinit2")]
    partial class reinit2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodOrder_API.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Details = "İmam Sefa Sokak 1/2 Fatih/İstanbul",
                            Name = "Ev",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Details = "İmam Hüseyin Sokak 5/6 Beylikdüzü/İstanbul",
                            Name = "Home",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Descr..",
                            Name = "Çorbalar"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Descr..",
                            Name = "Salatalar"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Descr..",
                            Name = "Ana Yemekler"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Descr..",
                            Name = "İçecekler"
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Descr..",
                            Name = "Item1",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Descr..",
                            Name = "Item2",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Descr..",
                            Name = "Item3",
                            Price = 30.0
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderHeaders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            DateTime = new DateTime(2023, 5, 20, 20, 44, 7, 834, DateTimeKind.Local).AddTicks(3021),
                            Notes = "Kola soğuk olsun.",
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            DateTime = new DateTime(2023, 5, 20, 20, 44, 7, 834, DateTimeKind.Local).AddTicks(3032),
                            Notes = "Zili çalmayın.",
                            Status = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderHeaderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            OrderHeaderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            OrderHeaderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 2,
                            OrderHeaderId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 3,
                            OrderHeaderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 3,
                            OrderHeaderId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@email.com",
                            Name = "Admin Kullanıcı",
                            Password = "password",
                            Role = "admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "customer1@email.com",
                            Name = "Müşteri 1",
                            Password = "pw1",
                            Role = "customer",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "customer2@email.com",
                            Name = "Müşteri 2",
                            Password = "pw2",
                            Role = "customer",
                            UserName = "user2"
                        });
                });

            modelBuilder.Entity("FoodOrder_API.Models.Address", b =>
                {
                    b.HasOne("FoodOrder_API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodOrder_API.Models.Item", b =>
                {
                    b.HasOne("FoodOrder_API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FoodOrder_API.Models.OrderHeader", b =>
                {
                    b.HasOne("FoodOrder_API.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodOrder_API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodOrder_API.Models.OrderItem", b =>
                {
                    b.HasOne("FoodOrder_API.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodOrder_API.Models.OrderHeader", "OrderHeader")
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderHeader");
                });
#pragma warning restore 612, 618
        }
    }
}
